export interface MIDIInstruction {
  type: 'morse' | 'instruction' | 'reserved';
  value: string;
  param?: string;
}

export interface MIDIMap {
  [key: string]: MIDIInstruction;
}

export const midiMap: MIDIMap = {
  "11": { "type": "morse", "value": "." },
  "12": { "type": "morse", "value": "-" },
  "13": { "type": "morse", "value": " " },
  "64": { "type": "morse", "value": ".-" },
  "65": { "type": "morse", "value": "-..." },
  "66": { "type": "morse", "value": "-.-." },
  "67": { "type": "morse", "value": "-.." },
  "68": { "type": "morse", "value": "." },
  "69": { "type": "morse", "value": "..-." },
  "70": { "type": "morse", "value": "--." },
  "71": { "type": "morse", "value": "...." },
  "72": { "type": "morse", "value": ".." },
  "73": { "type": "morse", "value": ".---" },
  "74": { "type": "morse", "value": "-.-" },
  "75": { "type": "morse", "value": ".-.." },
  "76": { "type": "morse", "value": "--" },
  "77": { "type": "morse", "value": "-." },
  "78": { "type": "morse", "value": "---" },
  "79": { "type": "morse", "value": ".--." },
  "80": { "type": "morse", "value": "--.-" },
  "81": { "type": "morse", "value": ".-." },
  "82": { "type": "morse", "value": "..." },
  "83": { "type": "morse", "value": "-" },
  "84": { "type": "morse", "value": "..-" },
  "85": { "type": "morse", "value": "...-" },
  "86": { "type": "morse", "value": ".--" },
  "87": { "type": "morse", "value": "-..-" },
  "88": { "type": "morse", "value": "-.--" },
  "89": { "type": "morse", "value": "--.." },
  "90": { "type": "morse", "value": "-----" },
  "91": { "type": "morse", "value": ".----" },
  "92": { "type": "morse", "value": "..---" },
  "93": { "type": "morse", "value": "...--" },
  "94": { "type": "morse", "value": "....-" },
  "95": { "type": "morse", "value": "....." },
  "96": { "type": "morse", "value": "-...." },
  "97": { "type": "morse", "value": "--..." },
  "98": { "type": "morse", "value": "---.." },
  "99": { "type": "morse", "value": "----." },
  // File instructions
  "8": { type: "instruction", value: "start_file" },
  "9": { type: "instruction", value: "end_file" },
  "10": { type: "instruction", value: "new_line" },
  "14": { type: "instruction", value: "set_file_type", param: "txt" },
  "15": { type: "instruction", value: "set_file_type", param: "jpg" },
  "16": { type: "instruction", value: "set_file_type", param: "png" },
  "17": { type: "instruction", value: "set_file_type", param: "gif" },
  "18": { type: "instruction", value: "set_file_type", param: "pdf" },
  "19": { type: "instruction", value: "set_file_type", param: "zip" },
  "20": { type: "instruction", value: "set_file_type", param: "mp3" },
  "21": { type: "instruction", value: "set_file_type", param: "wav" },
  "22": { type: "instruction", value: "set_file_type", param: "ogg" },
  "23": { type: "instruction", value: "set_file_type", param: "mp4" },
  "24": { type: "instruction", value: "set_file_type", param: "webm" },
  "26": { "type": "instruction", "value": "append_message" },
  "27": { "type": "instruction", "value": "append_message_char" },
  "28": { "type": "instruction", "value": "new_line" },
  "29": { "type": "instruction", "value": "carriage_return" },
  "30": { "type": "instruction", "value": "tab" },
  "31": { "type": "instruction", "value": "backspace" },
  "32": { "type": "instruction", "value": "delete" },
  "33": { "type": "reserved", "value": "nop" },
  "34": { "type": "reserved", "value": "nop" },
  "35": { "type": "reserved", "value": "nop" },
  "36": { "type": "reserved", "value": "nop" },
  "37": { "type": "reserved", "value": "nop" },
  "38": { "type": "reserved", "value": "nop" },
  "39": { "type": "reserved", "value": "nop" },
  "40": { "type": "reserved", "value": "nop" },
  "41": { "type": "reserved", "value": "nop" },
  "42": { "type": "reserved", "value": "nop" },
  "43": { "type": "reserved", "value": "nop" },
  "44": { "type": "reserved", "value": "nop" },
  "45": { "type": "reserved", "value": "nop" },
  "46": { "type": "reserved", "value": "nop" },
  "47": { "type": "reserved", "value": "nop" },
  "48": { "type": "reserved", "value": "nop" },
  "49": { "type": "reserved", "value": "nop" },
  "50": { "type": "reserved", "value": "nop" },
  "51": { "type": "reserved", "value": "nop" },
  "52": { "type": "reserved", "value": "nop" },
  "53": { "type": "reserved", "value": "nop" },
  "54": { "type": "reserved", "value": "nop" },
  "55": { "type": "reserved", "value": "nop" },
  "56": { "type": "reserved", "value": "nop" },
  "57": { "type": "reserved", "value": "nop" },
  "58": { "type": "reserved", "value": "nop" },
  "59": { "type": "reserved", "value": "nop" },
  "60": { "type": "reserved", "value": "nop" },
  "61": { "type": "reserved", "value": "nop" },
  "62": { "type": "reserved", "value": "nop" },
  "63": { "type": "reserved", "value": "nop" },
  "100": { type: "instruction", value: "append_url" },
  "101": { type: "instruction", value: "delete_last_char" },
  "102": { type: "instruction", value: "clear_content" },
  "103": { "type": "reserved", "value": "nop" },
  "104": { "type": "reserved", "value": "nop" },
  "105": { "type": "reserved", "value": "nop" },
  "106": { "type": "reserved", "value": "nop" },
  "107": { "type": "reserved", "value": "nop" },
  "108": { "type": "reserved", "value": "nop" },
  "109": { "type": "reserved", "value": "nop" },
  "110": { "type": "reserved", "value": "nop" },
  "111": { "type": "reserved", "value": "nop" },
  "112": { "type": "reserved", "value": "nop" },
  "113": { "type": "reserved", "value": "nop" },
  "114": { "type": "reserved", "value": "nop" },
  "115": { "type": "reserved", "value": "nop" },
  "116": { "type": "reserved", "value": "nop" },
  "117": { "type": "reserved", "value": "nop" },
  "118": { "type": "reserved", "value": "nop" },
  "119": { "type": "reserved", "value": "nop" },
  "120": { "type": "reserved", "value": "nop" },
  "121": { "type": "reserved", "value": "nop" },
  "122": { "type": "reserved", "value": "nop" },
  "123": { "type": "reserved", "value": "nop" },
  "124": { "type": "reserved", "value": "nop" },
  "125": { "type": "reserved", "value": "nop" },
  "126": { "type": "reserved", "value": "nop" },
  "127": { "type": "reserved", "value": "nop" }
};

export function getMIDIInstruction(midiNote: number): MIDIInstruction {
  return midiMap[midiNote.toString()] || { type: "reserved", value: "nop" };
}

export function isMorse(instruction: MIDIInstruction): boolean {
  return instruction.type === "morse";
}

